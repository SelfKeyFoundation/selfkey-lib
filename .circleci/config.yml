version: 2
aliases:
  - &cache_version '1'
  - &step_prepare_cache_buster
    run:
      name: Prepare Cache Buster
      command: echo ${CACHE_VERSION} > /tmp/cache_buster
  - &step_setup_nvm
    run:
      name: Setup NVM
      command: |
        export NODE_VERSION=$(cat .nvmrc)
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash -s -- --no-use
        echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
        echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
  - &step_restore_cache
    restore_cache:
      name: Restore Yarn Package Cache
      keys:
        - yarn-packages-{{ checksum "/tmp/cache_buster" }}-{{ .Branch }}
        - yarn-packages-{{ checksum "/tmp/cache_buster" }}-master
        - yarn-packages-{{ checksum "/tmp/cache_buster" }}-
  - &step_save_cache
    save_cache:
      name: Save Yarn Package Cache
      key: yarn-packages-{{ checksum "/tmp/cache_buster" }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      paths:
        - node_modules/

jobs:
  'unit-test':
    working_directory: ~/repo
    docker: &DOCKERIMAGE
      - image: circleci/node:10.11-stretch
    steps:
      - checkout
      - *step_prepare_cache_buster
      - *step_restore_cache
      - *step_setup_nvm
      - run:
          name: Install Node Packages
          command: yarn
      - run:
          name: Unit Tests
          command: yarn test
      - *step_save_cache

  'publish':
    working_directory: ~/repo
    docker: *DOCKERIMAGE
    steps:
      - checkout
      - *step_prepare_cache_buster
      - *step_restore_cache
      - *step_setup_nvm
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Install Package
          command: yarn
      - run:
          name: Build Package
          command: yarn
      - run:
          name: Publish package
          command: npm publish --access public
      - *step_save_cache
workflows:
  version: 2
  selfkey-lib:
    jobs:
      - 'unit-test':
          filters:
            tags:
              only: /.*/
      - 'publish':
          requires:
            - unit-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
